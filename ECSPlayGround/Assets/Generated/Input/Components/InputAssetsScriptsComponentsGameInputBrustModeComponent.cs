//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity assetsScriptsComponentsGameInputBrustModeEntity { get { return GetGroup(InputMatcher.AssetsScriptsComponentsGameInputBrustMode).GetSingleEntity(); } }

    public bool isAssetsScriptsComponentsGameInputBrustMode {
        get { return assetsScriptsComponentsGameInputBrustModeEntity != null; }
        set {
            var entity = assetsScriptsComponentsGameInputBrustModeEntity;
            if(value != (entity != null)) {
                if(value) {
                    CreateEntity().isAssetsScriptsComponentsGameInputBrustMode = true;
                } else {
                    DestroyEntity(entity);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    static readonly Assets.Scripts.Components.GameInput.BrustModeComponent assetsScriptsComponentsGameInputBrustModeComponent = new Assets.Scripts.Components.GameInput.BrustModeComponent();

    public bool isAssetsScriptsComponentsGameInputBrustMode {
        get { return HasComponent(InputComponentsLookup.AssetsScriptsComponentsGameInputBrustMode); }
        set {
            if(value != isAssetsScriptsComponentsGameInputBrustMode) {
                if(value) {
                    AddComponent(InputComponentsLookup.AssetsScriptsComponentsGameInputBrustMode, assetsScriptsComponentsGameInputBrustModeComponent);
                } else {
                    RemoveComponent(InputComponentsLookup.AssetsScriptsComponentsGameInputBrustMode);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherAssetsScriptsComponentsGameInputBrustMode;

    public static Entitas.IMatcher<InputEntity> AssetsScriptsComponentsGameInputBrustMode {
        get {
            if(_matcherAssetsScriptsComponentsGameInputBrustMode == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.AssetsScriptsComponentsGameInputBrustMode);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherAssetsScriptsComponentsGameInputBrustMode = matcher;
            }

            return _matcherAssetsScriptsComponentsGameInputBrustMode;
        }
    }
}
