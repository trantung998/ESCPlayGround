//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    static readonly Assets.Scripts.Components.GameBoard.DestroyedComponent assetsScriptsComponentsGameBoardDestroyedComponent = new Assets.Scripts.Components.GameBoard.DestroyedComponent();

    public bool isAssetsScriptsComponentsGameBoardDestroyed {
        get { return HasComponent(GameComponentsLookup.AssetsScriptsComponentsGameBoardDestroyed); }
        set {
            if(value != isAssetsScriptsComponentsGameBoardDestroyed) {
                if(value) {
                    AddComponent(GameComponentsLookup.AssetsScriptsComponentsGameBoardDestroyed, assetsScriptsComponentsGameBoardDestroyedComponent);
                } else {
                    RemoveComponent(GameComponentsLookup.AssetsScriptsComponentsGameBoardDestroyed);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAssetsScriptsComponentsGameBoardDestroyed;

    public static Entitas.IMatcher<GameEntity> AssetsScriptsComponentsGameBoardDestroyed {
        get {
            if(_matcherAssetsScriptsComponentsGameBoardDestroyed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AssetsScriptsComponentsGameBoardDestroyed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAssetsScriptsComponentsGameBoardDestroyed = matcher;
            }

            return _matcherAssetsScriptsComponentsGameBoardDestroyed;
        }
    }
}
