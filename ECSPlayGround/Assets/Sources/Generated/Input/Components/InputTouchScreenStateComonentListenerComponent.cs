//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public TouchScreenStateComonentListenerComponent touchScreenStateComonentListener { get { return (TouchScreenStateComonentListenerComponent)GetComponent(InputComponentsLookup.TouchScreenStateComonentListener); } }
    public bool hasTouchScreenStateComonentListener { get { return HasComponent(InputComponentsLookup.TouchScreenStateComonentListener); } }

    public void AddTouchScreenStateComonentListener(System.Collections.Generic.List<ITouchScreenStateComonentListener> newValue) {
        var index = InputComponentsLookup.TouchScreenStateComonentListener;
        var component = CreateComponent<TouchScreenStateComonentListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTouchScreenStateComonentListener(System.Collections.Generic.List<ITouchScreenStateComonentListener> newValue) {
        var index = InputComponentsLookup.TouchScreenStateComonentListener;
        var component = CreateComponent<TouchScreenStateComonentListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTouchScreenStateComonentListener() {
        RemoveComponent(InputComponentsLookup.TouchScreenStateComonentListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherTouchScreenStateComonentListener;

    public static Entitas.IMatcher<InputEntity> TouchScreenStateComonentListener {
        get {
            if (_matcherTouchScreenStateComonentListener == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.TouchScreenStateComonentListener);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherTouchScreenStateComonentListener = matcher;
            }

            return _matcherTouchScreenStateComonentListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public void AddTouchScreenStateComonentListener(ITouchScreenStateComonentListener value) {
        var listeners = hasTouchScreenStateComonentListener
            ? touchScreenStateComonentListener.value
            : new System.Collections.Generic.List<ITouchScreenStateComonentListener>();
        listeners.Add(value);
        ReplaceTouchScreenStateComonentListener(listeners);
    }

    public void RemoveTouchScreenStateComonentListener(ITouchScreenStateComonentListener value, bool removeComponentWhenEmpty = true) {
        var listeners = touchScreenStateComonentListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTouchScreenStateComonentListener();
        } else {
            ReplaceTouchScreenStateComonentListener(listeners);
        }
    }
}
