//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public PlayerInputComponent playerInput { get { return (PlayerInputComponent)GetComponent(InputComponentsLookup.PlayerInput); } }
    public bool hasPlayerInput { get { return HasComponent(InputComponentsLookup.PlayerInput); } }

    public void AddPlayerInput(bool newIsTouch, UnityEngine.Vector3 newTouchPosition) {
        var index = InputComponentsLookup.PlayerInput;
        var component = CreateComponent<PlayerInputComponent>(index);
        component.IsTouch = newIsTouch;
        component.TouchPosition = newTouchPosition;
        AddComponent(index, component);
    }

    public void ReplacePlayerInput(bool newIsTouch, UnityEngine.Vector3 newTouchPosition) {
        var index = InputComponentsLookup.PlayerInput;
        var component = CreateComponent<PlayerInputComponent>(index);
        component.IsTouch = newIsTouch;
        component.TouchPosition = newTouchPosition;
        ReplaceComponent(index, component);
    }

    public void RemovePlayerInput() {
        RemoveComponent(InputComponentsLookup.PlayerInput);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherPlayerInput;

    public static Entitas.IMatcher<InputEntity> PlayerInput {
        get {
            if (_matcherPlayerInput == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.PlayerInput);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherPlayerInput = matcher;
            }

            return _matcherPlayerInput;
        }
    }
}
