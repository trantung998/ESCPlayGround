//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public CharacterMoveCommandComponent characterMoveCommand { get { return (CharacterMoveCommandComponent)GetComponent(InputComponentsLookup.CharacterMoveCommand); } }
    public bool hasCharacterMoveCommand { get { return HasComponent(InputComponentsLookup.CharacterMoveCommand); } }

    public void AddCharacterMoveCommand(UnityEngine.Vector3 newPosition) {
        var index = InputComponentsLookup.CharacterMoveCommand;
        var component = CreateComponent<CharacterMoveCommandComponent>(index);
        component.Position = newPosition;
        AddComponent(index, component);
    }

    public void ReplaceCharacterMoveCommand(UnityEngine.Vector3 newPosition) {
        var index = InputComponentsLookup.CharacterMoveCommand;
        var component = CreateComponent<CharacterMoveCommandComponent>(index);
        component.Position = newPosition;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterMoveCommand() {
        RemoveComponent(InputComponentsLookup.CharacterMoveCommand);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherCharacterMoveCommand;

    public static Entitas.IMatcher<InputEntity> CharacterMoveCommand {
        get {
            if (_matcherCharacterMoveCommand == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.CharacterMoveCommand);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherCharacterMoveCommand = matcher;
            }

            return _matcherCharacterMoveCommand;
        }
    }
}
