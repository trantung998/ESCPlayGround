//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public TouchScreenStateComonentRemovedListenerComponent touchScreenStateComonentRemovedListener { get { return (TouchScreenStateComonentRemovedListenerComponent)GetComponent(InputComponentsLookup.TouchScreenStateComonentRemovedListener); } }
    public bool hasTouchScreenStateComonentRemovedListener { get { return HasComponent(InputComponentsLookup.TouchScreenStateComonentRemovedListener); } }

    public void AddTouchScreenStateComonentRemovedListener(System.Collections.Generic.List<ITouchScreenStateComonentRemovedListener> newValue) {
        var index = InputComponentsLookup.TouchScreenStateComonentRemovedListener;
        var component = CreateComponent<TouchScreenStateComonentRemovedListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTouchScreenStateComonentRemovedListener(System.Collections.Generic.List<ITouchScreenStateComonentRemovedListener> newValue) {
        var index = InputComponentsLookup.TouchScreenStateComonentRemovedListener;
        var component = CreateComponent<TouchScreenStateComonentRemovedListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTouchScreenStateComonentRemovedListener() {
        RemoveComponent(InputComponentsLookup.TouchScreenStateComonentRemovedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherTouchScreenStateComonentRemovedListener;

    public static Entitas.IMatcher<InputEntity> TouchScreenStateComonentRemovedListener {
        get {
            if (_matcherTouchScreenStateComonentRemovedListener == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.TouchScreenStateComonentRemovedListener);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherTouchScreenStateComonentRemovedListener = matcher;
            }

            return _matcherTouchScreenStateComonentRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public void AddTouchScreenStateComonentRemovedListener(ITouchScreenStateComonentRemovedListener value) {
        var listeners = hasTouchScreenStateComonentRemovedListener
            ? touchScreenStateComonentRemovedListener.value
            : new System.Collections.Generic.List<ITouchScreenStateComonentRemovedListener>();
        listeners.Add(value);
        ReplaceTouchScreenStateComonentRemovedListener(listeners);
    }

    public void RemoveTouchScreenStateComonentRemovedListener(ITouchScreenStateComonentRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = touchScreenStateComonentRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveTouchScreenStateComonentRemovedListener();
        } else {
            ReplaceTouchScreenStateComonentRemovedListener(listeners);
        }
    }
}
