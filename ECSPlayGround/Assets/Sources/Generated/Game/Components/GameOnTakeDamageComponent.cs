//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public OnTakeDamageComponent onTakeDamage { get { return (OnTakeDamageComponent)GetComponent(GameComponentsLookup.OnTakeDamage); } }
    public bool hasOnTakeDamage { get { return HasComponent(GameComponentsLookup.OnTakeDamage); } }

    public void AddOnTakeDamage(DamageComponent newDamageValue) {
        var index = GameComponentsLookup.OnTakeDamage;
        var component = CreateComponent<OnTakeDamageComponent>(index);
        component.damageValue = newDamageValue;
        AddComponent(index, component);
    }

    public void ReplaceOnTakeDamage(DamageComponent newDamageValue) {
        var index = GameComponentsLookup.OnTakeDamage;
        var component = CreateComponent<OnTakeDamageComponent>(index);
        component.damageValue = newDamageValue;
        ReplaceComponent(index, component);
    }

    public void RemoveOnTakeDamage() {
        RemoveComponent(GameComponentsLookup.OnTakeDamage);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherOnTakeDamage;

    public static Entitas.IMatcher<GameEntity> OnTakeDamage {
        get {
            if (_matcherOnTakeDamage == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.OnTakeDamage);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherOnTakeDamage = matcher;
            }

            return _matcherOnTakeDamage;
        }
    }
}
