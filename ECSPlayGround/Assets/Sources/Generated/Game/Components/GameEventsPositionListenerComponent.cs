//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EventsPositionListenerComponent eventsPositionListener { get { return (EventsPositionListenerComponent)GetComponent(GameComponentsLookup.EventsPositionListener); } }
    public bool hasEventsPositionListener { get { return HasComponent(GameComponentsLookup.EventsPositionListener); } }

    public void AddEventsPositionListener(System.Collections.Generic.List<IEventsPositionListener> newValue) {
        var index = GameComponentsLookup.EventsPositionListener;
        var component = CreateComponent<EventsPositionListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEventsPositionListener(System.Collections.Generic.List<IEventsPositionListener> newValue) {
        var index = GameComponentsLookup.EventsPositionListener;
        var component = CreateComponent<EventsPositionListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEventsPositionListener() {
        RemoveComponent(GameComponentsLookup.EventsPositionListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEventsPositionListener;

    public static Entitas.IMatcher<GameEntity> EventsPositionListener {
        get {
            if (_matcherEventsPositionListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EventsPositionListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEventsPositionListener = matcher;
            }

            return _matcherEventsPositionListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddEventsPositionListener(IEventsPositionListener value) {
        var listeners = hasEventsPositionListener
            ? eventsPositionListener.value
            : new System.Collections.Generic.List<IEventsPositionListener>();
        listeners.Add(value);
        ReplaceEventsPositionListener(listeners);
    }

    public void RemoveEventsPositionListener(IEventsPositionListener value, bool removeComponentWhenEmpty = true) {
        var listeners = eventsPositionListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveEventsPositionListener();
        } else {
            ReplaceEventsPositionListener(listeners);
        }
    }
}
