//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Configs.GameplayConfig configsGameplayConfig { get { return (Configs.GameplayConfig)GetComponent(GameComponentsLookup.ConfigsGameplayConfig); } }
    public bool hasConfigsGameplayConfig { get { return HasComponent(GameComponentsLookup.ConfigsGameplayConfig); } }

    public void AddConfigsGameplayConfig(UnityEngine.Vector2 newTopLeft, UnityEngine.Vector2 newBotRight) {
        var index = GameComponentsLookup.ConfigsGameplayConfig;
        var component = CreateComponent<Configs.GameplayConfig>(index);
        component.topLeft = newTopLeft;
        component.botRight = newBotRight;
        AddComponent(index, component);
    }

    public void ReplaceConfigsGameplayConfig(UnityEngine.Vector2 newTopLeft, UnityEngine.Vector2 newBotRight) {
        var index = GameComponentsLookup.ConfigsGameplayConfig;
        var component = CreateComponent<Configs.GameplayConfig>(index);
        component.topLeft = newTopLeft;
        component.botRight = newBotRight;
        ReplaceComponent(index, component);
    }

    public void RemoveConfigsGameplayConfig() {
        RemoveComponent(GameComponentsLookup.ConfigsGameplayConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherConfigsGameplayConfig;

    public static Entitas.IMatcher<GameEntity> ConfigsGameplayConfig {
        get {
            if (_matcherConfigsGameplayConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ConfigsGameplayConfig);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherConfigsGameplayConfig = matcher;
            }

            return _matcherConfigsGameplayConfig;
        }
    }
}
