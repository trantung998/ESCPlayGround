//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity tickTimeEntity { get { return GetGroup(GameMatcher.TickTime).GetSingleEntity(); } }
    public TickTimeComponent tickTime { get { return tickTimeEntity.tickTime; } }
    public bool hasTickTime { get { return tickTimeEntity != null; } }

    public GameEntity SetTickTime(float newCurrentTick) {
        if (hasTickTime) {
            throw new Entitas.EntitasException("Could not set TickTime!\n" + this + " already has an entity with TickTimeComponent!",
                "You should check if the context already has a tickTimeEntity before setting it or use context.ReplaceTickTime().");
        }
        var entity = CreateEntity();
        entity.AddTickTime(newCurrentTick);
        return entity;
    }

    public void ReplaceTickTime(float newCurrentTick) {
        var entity = tickTimeEntity;
        if (entity == null) {
            entity = SetTickTime(newCurrentTick);
        } else {
            entity.ReplaceTickTime(newCurrentTick);
        }
    }

    public void RemoveTickTime() {
        tickTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TickTimeComponent tickTime { get { return (TickTimeComponent)GetComponent(GameComponentsLookup.TickTime); } }
    public bool hasTickTime { get { return HasComponent(GameComponentsLookup.TickTime); } }

    public void AddTickTime(float newCurrentTick) {
        var index = GameComponentsLookup.TickTime;
        var component = CreateComponent<TickTimeComponent>(index);
        component.currentTick = newCurrentTick;
        AddComponent(index, component);
    }

    public void ReplaceTickTime(float newCurrentTick) {
        var index = GameComponentsLookup.TickTime;
        var component = CreateComponent<TickTimeComponent>(index);
        component.currentTick = newCurrentTick;
        ReplaceComponent(index, component);
    }

    public void RemoveTickTime() {
        RemoveComponent(GameComponentsLookup.TickTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTickTime;

    public static Entitas.IMatcher<GameEntity> TickTime {
        get {
            if (_matcherTickTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TickTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTickTime = matcher;
            }

            return _matcherTickTime;
        }
    }
}
