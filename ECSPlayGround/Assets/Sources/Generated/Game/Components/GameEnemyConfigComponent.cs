//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity enemyConfigEntity { get { return GetGroup(GameMatcher.EnemyConfig).GetSingleEntity(); } }
    public EnemyConfigComponent enemyConfig { get { return enemyConfigEntity.enemyConfig; } }
    public bool hasEnemyConfig { get { return enemyConfigEntity != null; } }

    public GameEntity SetEnemyConfig(DataStructs.EnemyData newValue) {
        if (hasEnemyConfig) {
            throw new Entitas.EntitasException("Could not set EnemyConfig!\n" + this + " already has an entity with EnemyConfigComponent!",
                "You should check if the context already has a enemyConfigEntity before setting it or use context.ReplaceEnemyConfig().");
        }
        var entity = CreateEntity();
        entity.AddEnemyConfig(newValue);
        return entity;
    }

    public void ReplaceEnemyConfig(DataStructs.EnemyData newValue) {
        var entity = enemyConfigEntity;
        if (entity == null) {
            entity = SetEnemyConfig(newValue);
        } else {
            entity.ReplaceEnemyConfig(newValue);
        }
    }

    public void RemoveEnemyConfig() {
        enemyConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EnemyConfigComponent enemyConfig { get { return (EnemyConfigComponent)GetComponent(GameComponentsLookup.EnemyConfig); } }
    public bool hasEnemyConfig { get { return HasComponent(GameComponentsLookup.EnemyConfig); } }

    public void AddEnemyConfig(DataStructs.EnemyData newValue) {
        var index = GameComponentsLookup.EnemyConfig;
        var component = CreateComponent<EnemyConfigComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEnemyConfig(DataStructs.EnemyData newValue) {
        var index = GameComponentsLookup.EnemyConfig;
        var component = CreateComponent<EnemyConfigComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEnemyConfig() {
        RemoveComponent(GameComponentsLookup.EnemyConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnemyConfig;

    public static Entitas.IMatcher<GameEntity> EnemyConfig {
        get {
            if (_matcherEnemyConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnemyConfig);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnemyConfig = matcher;
            }

            return _matcherEnemyConfig;
        }
    }
}
