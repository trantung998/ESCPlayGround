//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity mapConfigsEntity { get { return GetGroup(GameMatcher.MapConfigs).GetSingleEntity(); } }
    public MapConfigsComponent mapConfigs { get { return mapConfigsEntity.mapConfigs; } }
    public bool hasMapConfigs { get { return mapConfigsEntity != null; } }

    public GameEntity SetMapConfigs(MapConfigs newValue) {
        if (hasMapConfigs) {
            throw new Entitas.EntitasException("Could not set MapConfigs!\n" + this + " already has an entity with MapConfigsComponent!",
                "You should check if the context already has a mapConfigsEntity before setting it or use context.ReplaceMapConfigs().");
        }
        var entity = CreateEntity();
        entity.AddMapConfigs(newValue);
        return entity;
    }

    public void ReplaceMapConfigs(MapConfigs newValue) {
        var entity = mapConfigsEntity;
        if (entity == null) {
            entity = SetMapConfigs(newValue);
        } else {
            entity.ReplaceMapConfigs(newValue);
        }
    }

    public void RemoveMapConfigs() {
        mapConfigsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MapConfigsComponent mapConfigs { get { return (MapConfigsComponent)GetComponent(GameComponentsLookup.MapConfigs); } }
    public bool hasMapConfigs { get { return HasComponent(GameComponentsLookup.MapConfigs); } }

    public void AddMapConfigs(MapConfigs newValue) {
        var index = GameComponentsLookup.MapConfigs;
        var component = CreateComponent<MapConfigsComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMapConfigs(MapConfigs newValue) {
        var index = GameComponentsLookup.MapConfigs;
        var component = CreateComponent<MapConfigsComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMapConfigs() {
        RemoveComponent(GameComponentsLookup.MapConfigs);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMapConfigs;

    public static Entitas.IMatcher<GameEntity> MapConfigs {
        get {
            if (_matcherMapConfigs == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MapConfigs);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMapConfigs = matcher;
            }

            return _matcherMapConfigs;
        }
    }
}
