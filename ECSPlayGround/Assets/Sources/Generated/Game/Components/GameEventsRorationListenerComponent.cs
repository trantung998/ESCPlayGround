//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public EventsRorationListenerComponent eventsRorationListener { get { return (EventsRorationListenerComponent)GetComponent(GameComponentsLookup.EventsRorationListener); } }
    public bool hasEventsRorationListener { get { return HasComponent(GameComponentsLookup.EventsRorationListener); } }

    public void AddEventsRorationListener(System.Collections.Generic.List<IEventsRorationListener> newValue) {
        var index = GameComponentsLookup.EventsRorationListener;
        var component = CreateComponent<EventsRorationListenerComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceEventsRorationListener(System.Collections.Generic.List<IEventsRorationListener> newValue) {
        var index = GameComponentsLookup.EventsRorationListener;
        var component = CreateComponent<EventsRorationListenerComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveEventsRorationListener() {
        RemoveComponent(GameComponentsLookup.EventsRorationListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEventsRorationListener;

    public static Entitas.IMatcher<GameEntity> EventsRorationListener {
        get {
            if (_matcherEventsRorationListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EventsRorationListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEventsRorationListener = matcher;
            }

            return _matcherEventsRorationListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddEventsRorationListener(IEventsRorationListener value) {
        var listeners = hasEventsRorationListener
            ? eventsRorationListener.value
            : new System.Collections.Generic.List<IEventsRorationListener>();
        listeners.Add(value);
        ReplaceEventsRorationListener(listeners);
    }

    public void RemoveEventsRorationListener(IEventsRorationListener value, bool removeComponentWhenEmpty = true) {
        var listeners = eventsRorationListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveEventsRorationListener();
        } else {
            ReplaceEventsRorationListener(listeners);
        }
    }
}
