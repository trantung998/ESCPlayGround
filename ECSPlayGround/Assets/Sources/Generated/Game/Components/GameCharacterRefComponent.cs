//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity characterRefEntity { get { return GetGroup(GameMatcher.CharacterRef).GetSingleEntity(); } }
    public CharacterRef characterRef { get { return characterRefEntity.characterRef; } }
    public bool hasCharacterRef { get { return characterRefEntity != null; } }

    public GameEntity SetCharacterRef(GameEntity newValue) {
        if (hasCharacterRef) {
            throw new Entitas.EntitasException("Could not set CharacterRef!\n" + this + " already has an entity with CharacterRef!",
                "You should check if the context already has a characterRefEntity before setting it or use context.ReplaceCharacterRef().");
        }
        var entity = CreateEntity();
        entity.AddCharacterRef(newValue);
        return entity;
    }

    public void ReplaceCharacterRef(GameEntity newValue) {
        var entity = characterRefEntity;
        if (entity == null) {
            entity = SetCharacterRef(newValue);
        } else {
            entity.ReplaceCharacterRef(newValue);
        }
    }

    public void RemoveCharacterRef() {
        characterRefEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CharacterRef characterRef { get { return (CharacterRef)GetComponent(GameComponentsLookup.CharacterRef); } }
    public bool hasCharacterRef { get { return HasComponent(GameComponentsLookup.CharacterRef); } }

    public void AddCharacterRef(GameEntity newValue) {
        var index = GameComponentsLookup.CharacterRef;
        var component = CreateComponent<CharacterRef>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceCharacterRef(GameEntity newValue) {
        var index = GameComponentsLookup.CharacterRef;
        var component = CreateComponent<CharacterRef>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveCharacterRef() {
        RemoveComponent(GameComponentsLookup.CharacterRef);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCharacterRef;

    public static Entitas.IMatcher<GameEntity> CharacterRef {
        get {
            if (_matcherCharacterRef == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CharacterRef);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCharacterRef = matcher;
            }

            return _matcherCharacterRef;
        }
    }
}
