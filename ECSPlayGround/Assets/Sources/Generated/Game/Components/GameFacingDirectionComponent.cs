//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public FacingDirectionComponent facingDirection { get { return (FacingDirectionComponent)GetComponent(GameComponentsLookup.FacingDirection); } }
    public bool hasFacingDirection { get { return HasComponent(GameComponentsLookup.FacingDirection); } }

    public void AddFacingDirection(string newId, FacingDirection newValue) {
        var index = GameComponentsLookup.FacingDirection;
        var component = CreateComponent<FacingDirectionComponent>(index);
        component.id = newId;
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceFacingDirection(string newId, FacingDirection newValue) {
        var index = GameComponentsLookup.FacingDirection;
        var component = CreateComponent<FacingDirectionComponent>(index);
        component.id = newId;
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveFacingDirection() {
        RemoveComponent(GameComponentsLookup.FacingDirection);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherFacingDirection;

    public static Entitas.IMatcher<GameEntity> FacingDirection {
        get {
            if (_matcherFacingDirection == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.FacingDirection);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherFacingDirection = matcher;
            }

            return _matcherFacingDirection;
        }
    }
}
