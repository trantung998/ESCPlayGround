//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity cameraServiceEntity { get { return GetGroup(MetaMatcher.CameraService).GetSingleEntity(); } }
    public CameraServiceComponent cameraService { get { return cameraServiceEntity.cameraService; } }
    public bool hasCameraService { get { return cameraServiceEntity != null; } }

    public MetaEntity SetCameraService(ICameraService newInstance) {
        if (hasCameraService) {
            throw new Entitas.EntitasException("Could not set CameraService!\n" + this + " already has an entity with CameraServiceComponent!",
                "You should check if the context already has a cameraServiceEntity before setting it or use context.ReplaceCameraService().");
        }
        var entity = CreateEntity();
        entity.AddCameraService(newInstance);
        return entity;
    }

    public void ReplaceCameraService(ICameraService newInstance) {
        var entity = cameraServiceEntity;
        if (entity == null) {
            entity = SetCameraService(newInstance);
        } else {
            entity.ReplaceCameraService(newInstance);
        }
    }

    public void RemoveCameraService() {
        cameraServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public CameraServiceComponent cameraService { get { return (CameraServiceComponent)GetComponent(MetaComponentsLookup.CameraService); } }
    public bool hasCameraService { get { return HasComponent(MetaComponentsLookup.CameraService); } }

    public void AddCameraService(ICameraService newInstance) {
        var index = MetaComponentsLookup.CameraService;
        var component = CreateComponent<CameraServiceComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceCameraService(ICameraService newInstance) {
        var index = MetaComponentsLookup.CameraService;
        var component = CreateComponent<CameraServiceComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveCameraService() {
        RemoveComponent(MetaComponentsLookup.CameraService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherCameraService;

    public static Entitas.IMatcher<MetaEntity> CameraService {
        get {
            if (_matcherCameraService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.CameraService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherCameraService = matcher;
            }

            return _matcherCameraService;
        }
    }
}
