//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity configurationServiceEntity { get { return GetGroup(MetaMatcher.ConfigurationService).GetSingleEntity(); } }
    public ConfigurationServiceComponent configurationService { get { return configurationServiceEntity.configurationService; } }
    public bool hasConfigurationService { get { return configurationServiceEntity != null; } }

    public MetaEntity SetConfigurationService(IConfigurationService newInstance) {
        if (hasConfigurationService) {
            throw new Entitas.EntitasException("Could not set ConfigurationService!\n" + this + " already has an entity with ConfigurationServiceComponent!",
                "You should check if the context already has a configurationServiceEntity before setting it or use context.ReplaceConfigurationService().");
        }
        var entity = CreateEntity();
        entity.AddConfigurationService(newInstance);
        return entity;
    }

    public void ReplaceConfigurationService(IConfigurationService newInstance) {
        var entity = configurationServiceEntity;
        if (entity == null) {
            entity = SetConfigurationService(newInstance);
        } else {
            entity.ReplaceConfigurationService(newInstance);
        }
    }

    public void RemoveConfigurationService() {
        configurationServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public ConfigurationServiceComponent configurationService { get { return (ConfigurationServiceComponent)GetComponent(MetaComponentsLookup.ConfigurationService); } }
    public bool hasConfigurationService { get { return HasComponent(MetaComponentsLookup.ConfigurationService); } }

    public void AddConfigurationService(IConfigurationService newInstance) {
        var index = MetaComponentsLookup.ConfigurationService;
        var component = CreateComponent<ConfigurationServiceComponent>(index);
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceConfigurationService(IConfigurationService newInstance) {
        var index = MetaComponentsLookup.ConfigurationService;
        var component = CreateComponent<ConfigurationServiceComponent>(index);
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveConfigurationService() {
        RemoveComponent(MetaComponentsLookup.ConfigurationService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherConfigurationService;

    public static Entitas.IMatcher<MetaEntity> ConfigurationService {
        get {
            if (_matcherConfigurationService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.ConfigurationService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherConfigurationService = matcher;
            }

            return _matcherConfigurationService;
        }
    }
}
